----item----
version: 1
id: {44178C08-FBA0-44F5-BAC8-B73506693F4E}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Functions/Edit-TaskSchedule
parent: {E22D066A-04D0-4799-9DAD-EDD9EB07C2B2}
name: Edit-TaskSchedule
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 4227

function Parse-TaskSchedule{
        [CmdletBinding()]
    param(
        [ValidateNotNullOrEmpty()]
        [Sitecore.Data.Items.Item]$scheduleItem,
        
        [ValidateNotNullOrEmpty()]
        [string]$column
    )
    $ScSchedule = $scheduleItem.Schedule.Split('|'); 
    switch($column){
      from { [Sitecore.DateUtil]::IsoDateToDateTime($ScSchedule[0]); break;}
      to { [Sitecore.DateUtil]::IsoDateToDateTime($ScSchedule[1]); break;}
      weekdays {   $weekDays = @{1 = "Sunday" ; 2 = "Monday" ; 4 = "Tuesday" ; 8 = "Wednesday" ; 16 = "Thursday" ; 32 = "Friday" ; 64 = "Saturday" }
            [int]$days = $ScSchedule[2]
            $weekDays.Keys | Sort-Object | where { $_ -band $days } | foreach { $daysStr += "$($weekDays.Get_Item($_)), " }
            if($daysStr -ne $null){
                $daysStr = $daysStr.Trim(',', ' ');
            }
            $daysStr
            break;
      }
      interval {   if($ScSchedule[3] -eq $null) {
                ""
            }else{
                $ScSchedule[3]
            }
            break;
        }
    }
}

function Format-TaskSchedule{
        [CmdletBinding()]
    param(
        [ValidateNotNullOrEmpty()]
        [DateTime]$from,
        [ValidateNotNullOrEmpty()]
        [DateTime]$to,
        [ValidateNotNullOrEmpty()]
        [bool]$sunday,
        [ValidateNotNullOrEmpty()]
        [bool]$monday,
        [ValidateNotNullOrEmpty()]
        [bool]$tuesday,
        [ValidateNotNullOrEmpty()]
        [bool]$wednesday,
        [ValidateNotNullOrEmpty()]
        [bool]$thursday,
        [ValidateNotNullOrEmpty()]
        [bool]$friday,
        [ValidateNotNullOrEmpty()]
        [bool]$saturday,
        [ValidateNotNullOrEmpty()]
        [string]$interval
    )
    [int]$days = @{$true=1;$false=0}[$sunday] +
                 @{$true=2;$false=0}[$monday] + 
                 @{$true=4;$false=0}[$tuesday] + 
                 @{$true=8;$false=0}[$wednesday] + 
                 @{$true=16;$false=0}[$thursday] + 
                 @{$true=32;$false=0}[$friday] + 
                 @{$true=64;$false=0}[$saturday];
                 
    return "$([Sitecore.DateUtil]::ToIsoDate($from))|$([Sitecore.DateUtil]::ToIsoDate($to))|$days|$interval"
}

function Edit-TaskSchedule{
        [CmdletBinding()]
        
    param(
        [ValidateNotNullOrEmpty()]
        [Sitecore.Data.Items.Item]$scheduleItem
    )

    $from = Parse-TaskSchedule $schedule "from"
    $to =  Parse-TaskSchedule $schedule "to"
    $weekdays =  Parse-TaskSchedule $schedule "weekdays"
    $interval = Parse-TaskSchedule $schedule "interval"
    
    $sunday = $weekdays -match "sunday"
    $monday = $weekdays -match "monday"
    $tuesday = $weekdays -match "tuesday"
    $wednesday = $weekdays -match "wednesday"
    $thursday = $weekdays -match "thursday"
    $friday = $weekdays -match "friday"
    $saturday = $weekdays -match "saturday"
    
    $result = Read-Variable -Parameters `
        @{ Name = "from"; Title="Starts running at"; Editor="date time"}, 
        @{ Name = "to"; Title="Stops running at"; Editor="date time"}, 
        @{ Name = "sunday"; Title="Run on Sunday"}, 
        @{ Name = "monday"; Title="Run on Monday"}, 
        @{ Name = "tuesday"; Title="Run on Tuesday"}, 
        @{ Name = "wednesday"; Title="Run on Wednesday"}, 
        @{ Name = "thursday"; Title="Run on Thursday"}, 
        @{ Name = "friday"; Title="Run on Friday"}, 
        @{ Name = "saturday"; Title="Run on Saturday"}, 
        @{ Name = "interval"; Title="Interval <span style='font-family: courier new,monospace;'>(Days.Hours:Minutes:Seconds.Miliseconds)</span>"} `
        -Description "Specify schedule for the task you are editing. You can edit the date/time task becomes active and when it should stop running, what days it will run on and how often." `
        -Title "Task Schedule" -Width 500 -Height 570 -OkButtonName "Change" -CancelButtonName "Cancel" 

    if($result -eq "ok")
    {
        $schedule.Schedule = Format-TaskSchedule $from $to $sunday $monday $tuesday $wednesday $thursday $friday $saturday $interval
    }
}
#Format-TaskSchedule ([System.DateTime]::Now) ([System.DateTime]::Now) $true $true $true $true $true $true $false "1.0:0:1.0"
----version----
language: en
version: 1
revision: 2fe9247e-8881-4169-a9c5-d36d7438c137

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20140520T000534
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

2fe9247e-8881-4169-a9c5-d36d7438c137
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20140520T012351:635361458314083515
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
