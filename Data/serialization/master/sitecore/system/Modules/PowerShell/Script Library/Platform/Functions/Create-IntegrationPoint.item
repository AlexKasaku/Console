----item----
version: 1
id: {CBD83237-E051-473C-87AB-794D4976C587}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Platform/Functions/Create-IntegrationPoint
parent: {E22D066A-04D0-4799-9DAD-EDD9EB07C2B2}
name: Create-IntegrationPoint
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 1864

# create folders for scripts and parents for them if not existing
function CreatePathRecursively([string]$path)
{
  $pathExists = Test-Path $path;
  if(-not $pathExists)
  { 
    $parentPath = Split-Path "$($path)" -Parent
    $parentExists = Test-Path $parentPath
    if(-not $parentExists -or $parentPath.Length -lt 74)
    {
       CreatePathRecursively "$($parentPath)"
    }
    New-Item "$($path)" -ItemType "Modules/PowerShell Console/PowerShell Script Library"
  }
}

function CreateIntegrationPoint([string]$integrationPointId)
{
    $integrationPoint = [Cognifide.PowerShell.PowerShellIntegrations.Modules.IntegrationPoints]::Libraries[$integrationPointId.ToLower()]
    
    Write-Host "Creating '$($integrationPoint.Name)' integration point libraries..."
    
    if($module -eq $null){
        $module = get-item "master:\system\Modules\PowerShell\Script Library"
        $result = Read-Variable -Parameters `
            @{ Name = "module"; Title="Module to add Script Libraries to"; Root="/sitecore/system/Modules/PowerShell/Script Library" } `
            -Description "Pick a module that you need your $($integrationPoint.Name) libraries in. When you press OK the libraries required for '$($integrationPoint.Name)' will be created in that module. You can clean up empty ones after by right clicking one a module and selecting 'Purge Empty libraries' from the 'Script' submenu." `
            -Title "Pick a module to populate" -Width 500 -Height 450 -OkButtonName "Proceed" -CancelButtonName "Abort" -ShowHints
        if($result -ne "ok")
        {
            Exit
        }
        Set-Variable -Name "module" -Value $module -Scope Global
    }
    
    $ipLibraryPath = "$($module.ProviderPath)/$($integrationPoint.Path)"
    Write-Progress -Activity "Creating $($integrationPoint.Name) Libraries"
    CreatePathRecursively ($ipLibraryPath);
}
----version----
language: en
version: 1
revision: cc2f2cb6-1d2b-4e34-9116-d5cb6556f30f

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20141203T015814
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

cc2f2cb6-1d2b-4e34-9116-d5cb6556f30f
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20141205T011336:635533388165293906
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
