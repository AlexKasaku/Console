---
ID: "e6f6fcaa-644a-418c-a5f2-19352d66a260"
Parent: "c83cc1ee-a860-4e64-9715-e9c3bbb885f0"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Package Generator/Content Editor/Context Menu/Packaging/Start New Package
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: People/16x16/box_new.png
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Type: Rules
  Value: <ruleset />
- ID: "7fa141b7-7473-44a9-9bd9-2739c51ff8da"
  Hint: PersistentSessionId
  Value: packageBuilder
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $package = New-Package -Name "Content Package";
    $package.Sources.Clear();
    
    $package.Metadata.Author = "$me";
    $package.Metadata.Publisher = "";
    $package.Metadata.Version = "";
    $package.Metadata.Readme = "";
    
    $itemsAddedToPackage = New-Object System.Collections.ArrayList
    $itemsProcessedWithLinks = New-Object System.Collections.ArrayList
    $itemsProcessed = New-Object System.Collections.ArrayList
    
    
    function AddItems {
        param(
            [item]$Item,
            [Sitecore.Install.Items.ExplicitItemSource]$Items
        )
        
        if($item -and !$itemsAddedToPackage.Contains($item.ID)) {
            $itemsAddedToPackage.Add($item.ID) | Out-Null
            $items.Entries.Add((New-Object Sitecore.Install.Items.ItemReference $item.Uri, $false).ToString())
        }
    }
    
    function ProcessItemWithLinks {
        param(
            [item]$Item,
            [Sitecore.Install.Items.ExplicitItemSource]$Items
        )
        
        AddItems -Item $item -Items $items
            
        $links = $item.Links.GetAllLinks($true)
        foreach($link in $links) {
            $linkItem = $link.GetTargetItem()
            if($linkItem) {
                ProcessItem -Item $linkItem -Items $items -IncludeReferences $false
            }
        }
    }
    
    function IsSystemItem {
        param(
            [item]$Item
        )
        
        $item.Paths.FullPath.StartsWith("/sitecore/templates/System", [System.StringComparison]::OrdinalIgnoreCase)
    }
    
    function ProcessFieldTemplateItem {
        param(
            [item]$Item,
            [Sitecore.Install.Items.ExplicitItemSource]$Items
        )
        
        $children = $item.GetChildren()
        if($children) {
            foreach($child in $children) {
                AddItems -Item $child -Items $items
                ProcessFieldTemplateItem -Item $child -Items $items
            }
        }
    }
    
    function ProcessTemplateItem {
        param(
            [item]$Item,
            [Sitecore.Install.Items.ExplicitItemSource]$Items
        )
        
        $templateItem = New-Object Sitecore.Data.Items.TemplateItem $item
        $isSystemItem = IsSystemItem -Item $item
        
        if($isSystemItem) {
            ProcessFieldTemplateItem -Item $item -Items $items
            AddItems -Item $item -Items $items
            $standardValues = $templateItem.StandardValues
            if($standardValues) {
                ProcessItem -Item $standardValues -Items $items -IncludeReferences $true
            }
        }
        
        foreach($baseTemplate in $templateItem.BaseTemplates) {
            $isSystemTemplateItem = IsSystemItem -Item $baseTemplate
            if(!$isSystemTemplateItem) {
                ProcessItem -Item $baseTemplate -Items $items -IncludeReferences $false
            }
        }
    }
    
    function ProcessItem {
        param(
            [item]$Item,
            [Sitecore.Install.Items.ExplicitItemSource]$Items,
            [bool]$IncludeReferences
        )
        
        if(!$item) { return }
        
        if($IncludeReferences) {
            if(!$itemsProcessedWithLinks.Contains($item.ID)) {
                $itemsProcessedWithLinks.Add($item.ID) | Out-Null
                ProcessItemWithLinks -Item $item -Items $items
            } 
        } else {
            if(!$itemsProcessed.Contains($item.ID)) {
                $itemsProcessed.Add($item.ID) | Out-Null
                
                if($item.TemplateID -eq [Sitecore.TemplateIDs]::Template) {
                    ProcessTemplateItem -Item $item -Items $items
                } else {
                    # At the moment, assume this is not a file.
                    AddItems -Item $item -Items $items
                }
            }
        }
    }
    
    Show-Alert "New packaging session started.`n`n You can add items and branches to it from Content Editor context menu now.`n`nWhen you are done with adding content, use the `"Download Package`" in the context menu to download your content as Sitecore package."
    Close-Window
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 200
- ID: "f62c67b4-28b6-4a6f-91cb-db78cf054f4e"
  Hint: EnableRule
  Type: Rules
  Value: <ruleset />
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20130919T133600
