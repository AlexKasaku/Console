----item----
version: 1
id: {AC05422C-A1B1-41BA-A1FD-4EC7E944DE3B}
database: master
path: /sitecore/system/Modules/PowerShell/Script Library/Platform/Development/PowerShell Extensions Maintenance/Prepare Console Distribution
parent: {01BB164C-5E8E-4C9B-941F-E5340BDD520C}
name: Prepare Console Distribution
master: {00000000-0000-0000-0000-000000000000}
template: {DD22F1B3-BD87-4DB2-9E7D-F7A496888D43}
templatekey: PowerShell Script

----field----
field: {B1A94FF0-6897-47C0-9C51-AA6ACB80B1F0}
name: Script
key: script
content-length: 7623

# Clear test items:
# Get-ChildItem 'master:\system\Modules\PowerShell\Script Library' -recurse | Where-Object {  ($_.Name -match '\(test\)') } | Remove-Item

if([Cognifide.PowerShell.Core.VersionDecoupling.VersionResolver]::IsVersionHigherOrEqual([Cognifide.PowerShell.Core.VersionDecoupling.VersionResolver]::SitecoreVersion71)){
  $sitecore7Warning = ""
} else {
  $sitecore7Warning = @"

******************************************************
If you are on Sitecore 7.0 or lower - after installing 
the package please run the script located under 
the following path in your Script Library:

'Platform/Development/PowerShell Extensions Maintenance/Restore Rules on Sitecore 7dot0'
******************************************************

"@;
}

$Version = "$((Get-Host).Version.Major).$((Get-Host).Version.Minor)"

$package = new-package "Sitecore PowerShell Extensions";
$package.Sources.Clear();

$package.Metadata.Author = "Adam Najmanowicz - Cognifide, Michael West, Michael Reynolds";
$package.Metadata.Publisher = "Cognifide Limited";
$package.Metadata.Version = $Version;
$package.Metadata.Readme = '
This module provides 2 immediately usable interfaces 
The "PowerShell Console" available from the "Sitecore"
menu and the "PowerShell ISE" available from the 
"Developer Tools" sub-menu as well as Reports 
in the Sitecore -> Reporting Tools menu.

------------------------------------------------------
BEFORE UPGRADING THE MODULE from previous version, 
please back-up your script library!
------------------------------------------------------

' + 
$sitecore7Warning + 
'

PowerShell ISE comes with tutorial scripts and
Script Library for you to experiment with. Enjoy!

You can find a fairly detailed release notes here:
http://bit.ly/speReleaseNotes

Please report any problems in our issue tracker:
http://bit.ly/ScPsIss

Thank you for using Sitecore PowerShell Extensions.

Copyright (c) 2010-2015 Adam Najmanowicz - Cognifide
Copyright (c) 2014-2015 Michael West

http://www.cognifide.com/
http://blog.najmanowicz.com/
http://michaellwest.blogspot.com/
http://sitecorejunkie.com/category/powershell/'

# Item templates
$source = Get-Item 'master:\templates\Modules' | New-ItemSource -Name 'Master Item Templates Module Node' -InstallMode Overwrite
$source = Get-Item 'master:\templates\Modules\PowerShell Console' | New-ItemSource -Name 'Master Item Templates' -InstallMode Overwrite
$package.Sources.Add($source);

# Rules engine taxonomy templates for Sitecore 7.0 that misses it
if(-not [Cognifide.PowerShell.Core.VersionDecoupling.VersionResolver]::IsVersionHigherOrEqual([Cognifide.PowerShell.Core.VersionDecoupling.VersionResolver]::SitecoreVersion80)){
  $source = Get-Item 'master:\templates\System\Rules\Taxonomy' | New-ItemSource -Name 'Rules Engine Taxonomy' -InstallMode Skip -SkipVersions
  $package.Sources.Add($source);
  Write-Host "Adding rules engine taxonomy templates" -ForegroundColor Green
}

# Module Root
$source = Get-Item 'master:\system\Modules\PowerShell' | New-ExplicitItemSource -Name "Master Module Root" -InstallMode Merge -MergeMode Merge
$package.Sources.Add($source);

# Colors
$source = Get-Item 'master:\system\Modules\PowerShell\Console Colors' | New-ItemSource -Name "Master Colors" -InstallMode Overwrite
$package.Sources.Add($source);

# Fonts
$source = Get-Item 'master:\system\Modules\PowerShell\Fonts' | New-ItemSource -Name "Master Fonts" -InstallMode Overwrite
$package.Sources.Add($source);

# Rules Engine - Tag Definition
$source = Get-Item "master:/system/Settings/Rules/Definitions/Tags/PowerShell" | New-ItemSource -Name "Rules - Tag Definition" -InstallMode Overwrite
$package.Sources.Add($source);

# Rules Engine - Rules
$source = Get-Item "master:/system/Settings/Rules/Definitions/Elements/PowerShell" | New-ItemSource -Name "Rules" -InstallMode Overwrite
$package.Sources.Add($source);

# Rules Engine - Source Definition
$source = Get-Item "master:/system/Settings/Rules/PowerShell" | New-ItemSource -Name "Rules Source" -InstallMode Overwrite
$package.Sources.Add($source);

# Script Library
$source = Get-Item 'master:\system\Modules\PowerShell\Script Library' | New-ExplicitItemSource -Name "Master Script Library" -InstallMode Merge -MergeMode Clear
$package.Sources.Add($source);
$source = Get-ChildItem 'master:\system\Modules\PowerShell\Script Library' -recurse | New-ExplicitItemSource -Name "Master Script Library Content" -InstallMode  Overwrite
$package.Sources.Add($source);

# Settings
$source = (get-childitem -Path master:\system\Modules\PowerShell\Settings\) + (get-childitem "All Users" -Path master:\system\Modules\PowerShell\Settings\ -recurse) | New-ExplicitItemSource -Name "Settings" -InstallMode Merge -MergeMode Clear
$package.Sources.Add($source);

# Applications
$source = Get-Item core:\content\Applications\PowerShell | New-ItemSource -Name "Applications" -InstallMode Overwrite
$package.Sources.Add($source);

# Application Layouts
$source = Get-Item 'core:\layout\Layouts\Applications\*PowerShell*' | New-ExplicitItemSource "Application Layouts" -InstallMode Overwrite
$package.Sources.Add($source);

$source = Get-Item 'master:\layout\Layouts\PowerShell' | New-ItemSource "Master Layouts" -InstallMode Overwrite
$package.Sources.Add($source);

# Start Menu
$source = Get-ChildItem '*PowerShell*' -path 'core:/content/Documents and settings/All users/Start menu/'  -Recurse | New-ExplicitItemSource "Start Menu Icons" -InstallMode Overwrite
$package.Sources.Add($source);

# Content Editor Context Menu integration
$source = Get-ChildItem '*PowerShell*' -path 'core:/content/Applications/Content Editor/Context Menues/Default/'  -Recurse | New-ExplicitItemSource "Content Editor Context Menu integration #1" -InstallMode Merge -MergeMode Clear
$package.Sources.Add($source);
$source = Get-Item 'core:/content/Applications/Content Editor/Context Menues/Default/Edit Script/' | New-ExplicitItemSource "Content Editor Context Menu integration #2" -InstallMode Merge -MergeMode Clear
$package.Sources.Add($source);

# Task Integration
$source = Get-Item master:\system\Tasks\Commands\PowerShellScriptCommand | New-ItemSource -Name "Task Integration - Command" -InstallMode Overwrite
$package.Sources.Add($source);

# Files
$source = Get-Item "$AppPath\App_Config\Include\Cognifide.PowerShell.config" | New-ExplicitFileSource -Name "Configuration Files"
$source = Get-Item "$AppPath\App_Config\Include\Cognifide.PowerShell*.disabled" | New-ExplicitFileSource -Name "Disabled Configuration Files"
$package.Sources.Add($source);
$source = Get-Item "$AppPath\bin\Cognifide.PowerShell*.dll" | New-ExplicitFileSource -Name "PowerShell Binaries"
$package.Sources.Add($source);
$source = Get-Item "$AppPath/sitecore/shell/Themes/Standard/PowerShell.zip" | New-ExplicitFileSource -Name "Icons"
$package.Sources.Add($source);
$source = Get-ChildItem -exclude *.cs -Path "$AppPath\sitecore modules\PowerShell\" -filter "*.*" -Recurse -File | New-ExplicitFileSource -Name "Console Assets"
$package.Sources.Add($source);
$source = Get-ChildItem -exclude *.cs -Path "$AppPath\sitecore modules\Shell\PowerShell\" -filter "*.*" -Recurse -File | New-ExplicitFileSource -Name "Console Controls"
$package.Sources.Add($source);

$packageName = "$($package.Name)-$Version for Sitecore $($SitecoreVersion.Major)";
Export-Package -Project $package -Path "$packageName.xml"
Export-Package -Project $package -Path "$packageName.zip" -Zip
Download-File "$SitecorePackageFolder\$packageName.zip"

----version----
language: en
version: 1
revision: c6e1b794-9010-4a66-b416-4d580ada2853

----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20130510T150325
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

c6e1b794-9010-4a66-b416-4d580ada2853
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20150617T221338:635701760186676484
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
